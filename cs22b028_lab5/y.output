

Terminals which are not used:

   FLOAT
   INCREMENT
   DECREMENT


State 8 contains 1 shift/reduce conflict and 8 reduce/reduce conflicts.
State 18 contains 1 shift/reduce conflict.
State 27 contains 2 shift/reduce conflicts.

Grammar
rule 1    slist -> stmt SEMICOLON
rule 2    slist -> slist stmt SEMICOLON
rule 3    stmt -> ID ASSIGN E
rule 4    stmt -> error
rule 5    E -> E ADD T
rule 6    E -> E SUB T
rule 7    E -> T
rule 8    E -> E error T
rule 9    T -> T MUL F
rule 10   T -> T DIV F
rule 11   T -> T MOD F
rule 12   T -> F
rule 13   T -> error
rule 14   F -> LP E RP
rule 15   F -> LP E error
rule 16   F -> error RP
rule 17   F -> SUB F
rule 18   F -> INT
rule 19   F -> ID
rule 20   F -> error

Terminals, with rules where they appear

$ (-1)
error (256) 4 8 13 15 16 20
INT (258) 18
FLOAT (259)
ID (260) 3 19
INCREMENT (261)
DECREMENT (262)
ADD (263) 5
SUB (264) 6 17
MUL (265) 9
DIV (266) 10
MOD (267) 11
LP (268) 14 15
RP (269) 14 16
ASSIGN (270) 3
SEMICOLON (271) 1 2
UMINUS (272)

Nonterminals, with rules where they appear

slist (18)
    on left: 1 2, on right: 2
stmt (19)
    on left: 3 4, on right: 1 2
E (20)
    on left: 5 6 7 8, on right: 3 5 6 8 14 15
T (21)
    on left: 9 10 11 12 13, on right: 5 6 7 8 9 10 11
F (22)
    on left: 14 15 16 17 18 19 20, on right: 9 10 11 12 17


state 0

    error	shift, and go to state 1
    ID  	shift, and go to state 2

    slist	go to state 3
    stmt	go to state 4



state 1

    stmt  ->  error .   (rule 4)

    $default	reduce using rule 4 (stmt)



state 2

    stmt  ->  ID . ASSIGN E   (rule 3)

    ASSIGN	shift, and go to state 5



state 3

    slist  ->  slist . stmt SEMICOLON   (rule 2)

    $   	go to state 35
    error	shift, and go to state 1
    ID  	shift, and go to state 2

    stmt	go to state 6



state 4

    slist  ->  stmt . SEMICOLON   (rule 1)

    SEMICOLON	shift, and go to state 7



state 5

    stmt  ->  ID ASSIGN . E   (rule 3)

    error	shift, and go to state 8
    INT 	shift, and go to state 9
    ID  	shift, and go to state 10
    SUB 	shift, and go to state 11
    LP  	shift, and go to state 12

    E   	go to state 13
    T   	go to state 14
    F   	go to state 15



state 6

    slist  ->  slist stmt . SEMICOLON   (rule 2)

    SEMICOLON	shift, and go to state 16



state 7

    slist  ->  stmt SEMICOLON .   (rule 1)

    $default	reduce using rule 1 (slist)



state 8

    T  ->  error .   (rule 13)
    F  ->  error . RP   (rule 16)
    F  ->  error .   (rule 20)

    RP  	shift, and go to state 17

    error	reduce using rule 13 (T)
    error	[reduce using rule 20 (F)]
    ADD 	reduce using rule 13 (T)
    ADD 	[reduce using rule 20 (F)]
    SUB 	reduce using rule 13 (T)
    SUB 	[reduce using rule 20 (F)]
    MUL 	reduce using rule 13 (T)
    MUL 	[reduce using rule 20 (F)]
    DIV 	reduce using rule 13 (T)
    DIV 	[reduce using rule 20 (F)]
    MOD 	reduce using rule 13 (T)
    MOD 	[reduce using rule 20 (F)]
    RP  	[reduce using rule 13 (T)]
    RP  	[reduce using rule 20 (F)]
    SEMICOLON	reduce using rule 13 (T)
    SEMICOLON	[reduce using rule 20 (F)]
    $default	reduce using rule 13 (T)



state 9

    F  ->  INT .   (rule 18)

    $default	reduce using rule 18 (F)



state 10

    F  ->  ID .   (rule 19)

    $default	reduce using rule 19 (F)



state 11

    F  ->  SUB . F   (rule 17)

    error	shift, and go to state 18
    INT 	shift, and go to state 9
    ID  	shift, and go to state 10
    SUB 	shift, and go to state 11
    LP  	shift, and go to state 12

    F   	go to state 19



state 12

    F  ->  LP . E RP   (rule 14)
    F  ->  LP . E error   (rule 15)

    error	shift, and go to state 8
    INT 	shift, and go to state 9
    ID  	shift, and go to state 10
    SUB 	shift, and go to state 11
    LP  	shift, and go to state 12

    E   	go to state 20
    T   	go to state 14
    F   	go to state 15



state 13

    stmt  ->  ID ASSIGN E .   (rule 3)
    E  ->  E . ADD T   (rule 5)
    E  ->  E . SUB T   (rule 6)
    E  ->  E . error T   (rule 8)

    error	shift, and go to state 21
    ADD 	shift, and go to state 22
    SUB 	shift, and go to state 23

    SEMICOLON	reduce using rule 3 (stmt)



state 14

    E  ->  T .   (rule 7)
    T  ->  T . MUL F   (rule 9)
    T  ->  T . DIV F   (rule 10)
    T  ->  T . MOD F   (rule 11)

    MUL 	shift, and go to state 24
    DIV 	shift, and go to state 25
    MOD 	shift, and go to state 26

    $default	reduce using rule 7 (E)



state 15

    T  ->  F .   (rule 12)

    $default	reduce using rule 12 (T)



state 16

    slist  ->  slist stmt SEMICOLON .   (rule 2)

    $default	reduce using rule 2 (slist)



state 17

    F  ->  error RP .   (rule 16)

    $default	reduce using rule 16 (F)



state 18

    F  ->  error . RP   (rule 16)
    F  ->  error .   (rule 20)

    RP  	shift, and go to state 17

    RP  	[reduce using rule 20 (F)]
    $default	reduce using rule 20 (F)



state 19

    F  ->  SUB F .   (rule 17)

    $default	reduce using rule 17 (F)



state 20

    E  ->  E . ADD T   (rule 5)
    E  ->  E . SUB T   (rule 6)
    E  ->  E . error T   (rule 8)
    F  ->  LP E . RP   (rule 14)
    F  ->  LP E . error   (rule 15)

    error	shift, and go to state 27
    ADD 	shift, and go to state 22
    SUB 	shift, and go to state 23
    RP  	shift, and go to state 28



state 21

    E  ->  E error . T   (rule 8)

    error	shift, and go to state 8
    INT 	shift, and go to state 9
    ID  	shift, and go to state 10
    SUB 	shift, and go to state 11
    LP  	shift, and go to state 12

    T   	go to state 29
    F   	go to state 15



state 22

    E  ->  E ADD . T   (rule 5)

    error	shift, and go to state 8
    INT 	shift, and go to state 9
    ID  	shift, and go to state 10
    SUB 	shift, and go to state 11
    LP  	shift, and go to state 12

    T   	go to state 30
    F   	go to state 15



state 23

    E  ->  E SUB . T   (rule 6)

    error	shift, and go to state 8
    INT 	shift, and go to state 9
    ID  	shift, and go to state 10
    SUB 	shift, and go to state 11
    LP  	shift, and go to state 12

    T   	go to state 31
    F   	go to state 15



state 24

    T  ->  T MUL . F   (rule 9)

    error	shift, and go to state 18
    INT 	shift, and go to state 9
    ID  	shift, and go to state 10
    SUB 	shift, and go to state 11
    LP  	shift, and go to state 12

    F   	go to state 32



state 25

    T  ->  T DIV . F   (rule 10)

    error	shift, and go to state 18
    INT 	shift, and go to state 9
    ID  	shift, and go to state 10
    SUB 	shift, and go to state 11
    LP  	shift, and go to state 12

    F   	go to state 33



state 26

    T  ->  T MOD . F   (rule 11)

    error	shift, and go to state 18
    INT 	shift, and go to state 9
    ID  	shift, and go to state 10
    SUB 	shift, and go to state 11
    LP  	shift, and go to state 12

    F   	go to state 34



state 27

    E  ->  E error . T   (rule 8)
    F  ->  LP E error .   (rule 15)

    error	shift, and go to state 8
    INT 	shift, and go to state 9
    ID  	shift, and go to state 10
    SUB 	shift, and go to state 11
    LP  	shift, and go to state 12

    error	[reduce using rule 15 (F)]
    ADD 	reduce using rule 15 (F)
    SUB 	[reduce using rule 15 (F)]
    MUL 	reduce using rule 15 (F)
    DIV 	reduce using rule 15 (F)
    MOD 	reduce using rule 15 (F)
    RP  	reduce using rule 15 (F)
    SEMICOLON	reduce using rule 15 (F)

    T   	go to state 29
    F   	go to state 15



state 28

    F  ->  LP E RP .   (rule 14)

    $default	reduce using rule 14 (F)



state 29

    E  ->  E error T .   (rule 8)
    T  ->  T . MUL F   (rule 9)
    T  ->  T . DIV F   (rule 10)
    T  ->  T . MOD F   (rule 11)

    MUL 	shift, and go to state 24
    DIV 	shift, and go to state 25
    MOD 	shift, and go to state 26

    $default	reduce using rule 8 (E)



state 30

    E  ->  E ADD T .   (rule 5)
    T  ->  T . MUL F   (rule 9)
    T  ->  T . DIV F   (rule 10)
    T  ->  T . MOD F   (rule 11)

    MUL 	shift, and go to state 24
    DIV 	shift, and go to state 25
    MOD 	shift, and go to state 26

    $default	reduce using rule 5 (E)



state 31

    E  ->  E SUB T .   (rule 6)
    T  ->  T . MUL F   (rule 9)
    T  ->  T . DIV F   (rule 10)
    T  ->  T . MOD F   (rule 11)

    MUL 	shift, and go to state 24
    DIV 	shift, and go to state 25
    MOD 	shift, and go to state 26

    $default	reduce using rule 6 (E)



state 32

    T  ->  T MUL F .   (rule 9)

    $default	reduce using rule 9 (T)



state 33

    T  ->  T DIV F .   (rule 10)

    $default	reduce using rule 10 (T)



state 34

    T  ->  T MOD F .   (rule 11)

    $default	reduce using rule 11 (T)



state 35

    $   	go to state 36



state 36

    $default	accept
